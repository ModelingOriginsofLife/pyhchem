# Tim trying to fix up Matteo's runner-driven binding enzyme
# special states: 0,1,...19 
# ordinary states: 20, 21, ...
type: A, B
# Initial condition
number of particles: 78
state max: 100
fill: A20 0.5, A21 0.5

# enzyme has form: B1 - B0 - Bi - Bp - B2 - Bq - Bj - B0 - B1 (a stopper at each end and in the middle, with two runners)
# which should catalyse Ai + Aj -> Ap-Aq

# e.g. B1 - B0 - B20 - B21 - B2 - B22 - B21 - B0 - B1 which should catalyse A20 + A21 -> A22-A23
# (but then has problem of bonding happening on different sides - one solution is to link with B1's around the back

# Problems:
#  - we use the rules order to avoid slowing down runners

# initial bonding (could easily be to the wrong place but is quickly reversible)
Ax Bx -> Ax-B3
Ax-B3 -> Ax Bx
# if the bond was to the right place (next to the B0) then we make it permanent by changing the B3 to a B4
B3-B0 -> B4-B5
# we take a copy of what the input state was (hopefully it hasn't changed!) to allow the enzyme to reset later
B4-Ax -> Bx-Ax
# now B5 is a runner, moves randomly until reaches the B2 (or B12) stopper in the middle
B2-B5 -> B12-B6           # first runner to arrive changes the middle stopper to 12
B5-B12 -> B14-B13         # second runner changes stopper to 13 and itself to 14
B5-B1 -> B5-B1            # don't move past the end stoppers
B5-Bx -> Bx-B5 : 0.1      # running (also using reaction order to ensure we don't move past the stopper, more general case of the two reactions above)
B13-B6 -> B2-B14          # middle stopper then notifies the first runner to also change itself to 14 and resets
# now we want to bond the attached reactants reasonably quickly, to avoid the problem of multiple enzymes getting linked
# B14 is a runner:
B14-B2 -> B14-B2          # don't move past the middle stopper
B14-B1 -> B14-B1          # don't move past the end stoppers
B14-Bx -> Bx-B14 : 0.1    # running (also using reaction order to ensure we don't move past the stopper, more general case of reaction above)
B14-Ax -> B15-A7          # mark the reactant as ready to bond (since now we know we have two attached)
# now we want to run again to the middle with B15 so that when the reactants bond they can take their new state 
# (hopefully we reach the middle before the reactants take their output state!)
B15-B2 -> B16-B2          # stop at the middle stopper
B15-B1 -> B15-B1          # don't move past the end stoppers
B15-Bx -> Bx-B15 : 0.1    # running (also using reaction order, more general case of two reactions above)
A7 A7 -> A8-A8            # reactants bond! (hopefully the two we are holding, fatal if not)
B16 A8 -> B16 A17         # bump check (hoping to ensure that reactant takes correct output state)
A17-Bx -> Ax-B9           # reactants take their new state
# (we don't debond at that point because then the enzyme couldn't reset)
B9-B16 -> B10-B11
B10-Ax -> Bx Ax           # store the output state on the enzyme and debond the reactant
# now the reaction product is released and we can reset
# B11 is now a runner, moves randomly (but not across the middle stopper) until reaches the B1 stopper
B11-B2 -> B11-B2          # specific case of below; don't cross the middle stopper
B11-B1 -> B0-B1           # reset when we reach the end stopper. enzyme is ready to go again!
B11-Bx -> Bx-B11 : 0.01   # running (also using reaction order, more general case of the two reactions above)
